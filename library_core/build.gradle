apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven' // 增加
group='com.github.Smatezhang'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName           : project.getName(),
                             "room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources', 'src/main/resources/']
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    //noinspection GradleCompatible
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    //base
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["cardview"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["room-runtime"]
    api rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["lifecycle-runtime"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxrelay"]
    api rootProject.ext.dependencies["rxbinding"]
    api rootProject.ext.dependencies["dagger"]
    api rootProject.ext.dependencies["dagger-android"]
    api rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-compiler"]
    api rootProject.ext.dependencies["timber"]
    api rootProject.ext.dependencies["fastjson"]
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle-components"]
    api rootProject.ext.dependencies["bindingcollectionadapter"]
    api rootProject.ext.dependencies["bindingcollectionadapter-recyclerview"]
    api rootProject.ext.dependencies["tkrefreshlayout"]
//    api project(':library_common')
//    api project(':library-res')
    implementation 'com.github.Smatezhang:Project_library_res_lock:v1.0.0'
    implementation 'com.github.Smatezhang:Project_library_common:1.0.0'

}
